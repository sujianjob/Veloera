version: '3.8'

services:
  # Veloera 转录服务主应用
  veloera-transcription:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: veloera-transcription
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # 数据库配置
      - SQL_DSN=root:123456@tcp(mysql:3306)/veloera?charset=utf8mb4&parseTime=True&loc=Local
      
      # Redis 配置
      - REDIS_CONN_STRING=redis://redis:6379
      
      # 转录服务配置
      - TRANSCRIPTION_ENABLED=true
      - STORAGE_TYPE=local
      - STORAGE_PATH=/data/transcription
      - MAX_FILE_SIZE=104857600  # 100MB
      - MAX_DURATION=3600        # 1小时
      - FILE_RETENTION_DAYS=30   # 文件保留30天
      
      # 支持的格式和语言
      - SUPPORTED_FORMATS=mp3,mp4,wav,m4a,flac,aac,ogg,avi,mov,mkv,wmv,flv,webm
      - SUPPORTED_LANGUAGES=auto,zh,en,ja,ko,es,fr,de,ru,it,pt,ar,hi,th,vi
      - DEFAULT_OUTPUT_FORMAT=json
      
      # 计费配置
      - TRANSCRIPTION_PRICE_PER_MINUTE=0.1  # 每分钟0.1元
      - TRANSCRIPTION_PRICE_PER_MB=0.05     # 每MB 0.05元
      
      # OpenAI Whisper 配置
      - WHISPER_API_KEY=${WHISPER_API_KEY:-your_openai_api_key}
      - WHISPER_BASE_URL=${WHISPER_BASE_URL:-https://api.openai.com}
      
      # 阿里云语音识别配置
      - ALICLOUD_ACCESS_KEY_ID=${ALICLOUD_ACCESS_KEY_ID:-}
      - ALICLOUD_ACCESS_KEY_SECRET=${ALICLOUD_ACCESS_KEY_SECRET:-}
      - ALICLOUD_REGION=${ALICLOUD_REGION:-cn-hangzhou}
      
      # 腾讯云语音识别配置
      - TENCENT_SECRET_ID=${TENCENT_SECRET_ID:-}
      - TENCENT_SECRET_KEY=${TENCENT_SECRET_KEY:-}
      - TENCENT_REGION=${TENCENT_REGION:-ap-beijing}
      
      # 百度语音识别配置
      - BAIDU_API_KEY=${BAIDU_API_KEY:-}
      - BAIDU_SECRET_KEY=${BAIDU_SECRET_KEY:-}
      
      # 系统配置
      - SESSION_SECRET=${SESSION_SECRET:-veloera-transcription-secret}
      - SERVER_PORT=3000
      - LOG_LEVEL=info
      
      # 通知配置
      - ENABLE_EMAIL_NOTIFICATION=false
      - ENABLE_WEBHOOK_NOTIFICATION=false
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASS=${SMTP_PASS:-}
      
    volumes:
      - ./data/transcription:/data/transcription
      - ./logs:/app/logs
    depends_on:
      - mysql
      - redis
    networks:
      - veloera-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: veloera-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=veloera
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./migration:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - veloera-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123456"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: veloera-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - veloera-network
    command: redis-server --appendonly yes --requirepass ""
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: veloera-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - veloera-transcription
    networks:
      - veloera-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  veloera-network:
    driver: bridge
